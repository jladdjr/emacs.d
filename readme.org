* Introduction

* Bootstrap Package Manager

Using [[https://github.com/jwiegley/use-package#getting-started][straight.el]] and use-package.

See [[https://jeffkreeftmeijer.com/emacs-straight-use-package/][this article]] for benefits of using straight.el.

** Bootstrap straight

#+begin_src emacs-lisp
(message "bootstrapping straight.el")

(defvar bootstrap-version)
(let ((bootstrap-file
       (expand-file-name "straight/repos/straight.el/bootstrap.el" user-emacs-directory))
      (bootstrap-version 6))
  (unless (file-exists-p bootstrap-file)
    (with-current-buffer
        (url-retrieve-synchronously
         "https://raw.githubusercontent.com/radian-software/straight.el/develop/install.el"
         'silent 'inhibit-cookies)
      (goto-char (point-max))
      (eval-print-last-sexp)))
  (load bootstrap-file nil 'nomessage))
#+end_src

** Disable package.el in favor of straight.el

#+begin_src emacs-lisp
(setq package-enable-at-startup nil)
#+end_src

** Install use-package

use-package allows for you to install and configure a package in one step.

#+begin_src emacs-lisp
(straight-use-package 'use-package)
#+end_src

*** Configure use-package to use straight.el by default

#+begin_src emacs-lisp
(use-package straight
             :custom (straight-use-package-by-default t))
#+end_src

Now in order to install a package, all we need to do is:

#+begin_src emacs-lisp
; (use-package evil-commentary)
#+end_src

There are options for configurang packages with straight.el, too:
- `:init` - code that will be run before installing the package
- `:config` - code that will be run right after the package is installed
- `:bind` - adds key bindings after a module has been installed
- `:custom:` - set customizable variables

See the straight.el [[https://github.com/jwiegley/use-package#getting-started][getting started guide]] for more documentation on how to load and configure packages with straight.el.

* Install evil

#+begin_src emacs-lisp
(use-package evil
             :config (evil-mode))
#+end_src
